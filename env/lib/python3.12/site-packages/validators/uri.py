"""URI."""


from .email import email
from .url import url
from .utils import validator


def _file_url(value: str):
    if not value.startswith("file:///"):
        return False
    return True


def _ipfs_url(value: str):
    if not value.startswith("ipfs://"):
        return False
    return True


@validator
def uri(value: str, /):
    """Return whether or not given value is a valid URI.

    Examples:
        >>> uri('mailto:example@domain.com')
        >>> uri('file:path.txt')

    Args:
        value:
            URI to validate.

    Returns:
        (Literal[True]): If `value` is a valid URI.
        (ValidationError): If `value` is an invalid URI.
    """
    if not value:
        return False


    if any(
        value.startswith(item) for item in {
            "ftp", "ftps", "git", "http", "https",
            "irc", "rtmp", "rtmps", "rtsp", "sftp",
            "ssh", "telnet",
        }
    ):
        return url(value)

    if value.startswith("mailto:"):
        return email(value.lstrip("mailto:"))

    if value.startswith("file:"):
        return _file_url(value)

    if value.startswith("ipfs:"):
        return _ipfs_url(value)

    if value.startswith("magnet:?"):
        return True

    if value.startswith("tel:"):
        return True

    if value.startswith("data:"):
        return True

    if value.startswith("urn:"):
        return True

    if value.startswith("urc:"):
        return True

    return False
